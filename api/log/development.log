Started POST "/graphql" for 172.18.0.1 at 2020-05-30 02:47:58 +0000
  [1m[35m (0.8ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  [1m[35m (16.6ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  requests {\n    id,\n    jobId,\n    jobType,\n    rules,\n    rssUrls,\n    scheduleType,\n    intervalHours\n  }\n}", "graphql"=>{"query"=>"query {\n  requests {\n    id,\n    jobId,\n    jobType,\n    rules,\n    rssUrls,\n    scheduleType,\n    intervalHours\n  }\n}"}}
  [1m[36mCrawlRequest Load (9.2ms)[0m  [1m[34mSELECT `crawl_requests`.* FROM `crawl_requests`[0m
  â†³ app/controllers/graphql_controller.rb:15
Completed 200 OK in 195ms (Views: 2.1ms | ActiveRecord: 49.6ms)


Started POST "/graphql" for 172.18.0.1 at 2020-05-30 02:48:16 +0000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  requests {\n    id,\n    jobId,\n    jobType,\n    rules,\n    rssUrls,\n    scheduleType\n  }\n}", "graphql"=>{"query"=>"query {\n  requests {\n    id,\n    jobId,\n    jobType,\n    rules,\n    rssUrls,\n    scheduleType\n  }\n}"}}
  [1m[36mCrawlRequest Load (4.2ms)[0m  [1m[34mSELECT `crawl_requests`.* FROM `crawl_requests`[0m
  â†³ app/controllers/graphql_controller.rb:15
Completed 200 OK in 30ms (Views: 1.6ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 192.168.96.1 at 2020-05-31 22:35:10 +0900
  [1m[35m (1.4ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  [1m[35m (12.0ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 494ms (Views: 14.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.96.1 at 2020-05-31 22:36:01 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.5ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 347ms (Views: 0.6ms | ActiveRecord: 78.2ms)


Started POST "/graphql" for 192.168.96.1 at 2020-05-31 22:41:02 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.1ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 102ms (Views: 0.3ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 192.168.96.1 at 2020-05-31 22:45:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.7ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 109ms (Views: 0.3ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 192.168.96.1 at 2020-05-31 22:49:38 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (8.9ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 152ms (Views: 0.3ms | ActiveRecord: 8.9ms)


Started POST "/graphql" for 192.168.96.1 at 2020-05-31 22:53:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 93ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:08:57 +0900
  [1m[35m (1.2ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.4ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 130ms (Views: 0.3ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:10:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.2ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 90ms (Views: 0.6ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:14:36 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.9ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 75ms (Views: 0.5ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:17:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.3ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 102ms (Views: 0.5ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:18:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.7ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 172ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:21:57 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.5ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 131ms (Views: 0.6ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 192.168.96.1 at 2020-06-01 09:27:40 +0900
  [1m[35m (0.9ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.7ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 86ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:22:43 +0900
  [1m[35m (1.3ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  [1m[35m (25.8ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 514ms (Views: 19.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:28:17 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 190ms (Views: 13.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:28:26 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 164ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:28:34 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 254ms (Views: 17.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:28:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 185ms (Views: 16.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:28:46 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 345ms (Views: 21.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.112.1 at 2020-06-01 20:28:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 164ms (Views: 15.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.144.1 at 2020-06-01 20:58:59 +0900
  [1m[35m (1.7ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  [1m[35m (17.6ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.2.4.3) lib/active_record/migration.rb:579:in `check_pending!'
activerecord (5.2.4.3) lib/active_record/migration.rb:556:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.4.3) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.4.3) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.4.3) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.4.3) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.4.3) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.4.3) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.4.3) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.4.3) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.2.2) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.4.3) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.2.2) lib/rack/sendfile.rb:110:in `call'
railties (5.2.4.3) lib/rails/engine.rb:524:in `call'
puma (3.12.6) lib/puma/configuration.rb:227:in `call'
puma (3.12.6) lib/puma/server.rb:706:in `handle_request'
puma (3.12.6) lib/puma/server.rb:476:in `process_client'
puma (3.12.6) lib/puma/server.rb:334:in `block in run'
puma (3.12.6) lib/puma/thread_pool.rb:135:in `block in spawn_thread'
Started POST "/graphql" for 192.168.144.1 at 2020-06-01 20:59:06 +0900
  [1m[35m (1.4ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.2.4.3) lib/active_record/migration.rb:579:in `check_pending!'
activerecord (5.2.4.3) lib/active_record/migration.rb:556:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.4.3) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.4.3) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.4.3) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.4.3) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.4.3) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.4.3) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.4.3) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.4.3) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.2.2) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.4.3) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.4.3) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.2.2) lib/rack/sendfile.rb:110:in `call'
railties (5.2.4.3) lib/rails/engine.rb:524:in `call'
puma (3.12.6) lib/puma/configuration.rb:227:in `call'
puma (3.12.6) lib/puma/server.rb:706:in `handle_request'
puma (3.12.6) lib/puma/server.rb:476:in `process_client'
puma (3.12.6) lib/puma/server.rb:334:in `block in run'
puma (3.12.6) lib/puma/thread_pool.rb:135:in `block in spawn_thread'
  [1m[35m (1.3ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (1.1ms)[0m  [1m[34mSELECT GET_LOCK('7458657555131878620', 0)[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (3.4ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/bin/rake:23
Migrating to CreateArticleArchives (20200601105031)
  [1m[35m (52.3ms)[0m  [1m[35mCREATE TABLE `article_archives` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY, `url` text, `content` mediumblob, `title` varchar(255), `created_at` datetime NOT NULL, `updated_at` datetime NOT NULL)[0m
  â†³ db/migrate/20200601105031_create_article_archives.rb:3
  [1m[35m (2.4ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[36mActiveRecord::SchemaMigration Create (0.8ms)[0m  [1m[32mINSERT INTO `schema_migrations` (`version`) VALUES ('20200601105031')[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[36mActiveRecord::InternalMetadata Load (8.0ms)[0m  [1m[34mSELECT  `ar_internal_metadata`.* FROM `ar_internal_metadata` WHERE `ar_internal_metadata`.`key` = 'environment' LIMIT 1[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (0.6ms)[0m  [1m[34mSELECT RELEASE_LOCK('7458657555131878620')[0m
  â†³ /usr/local/bundle/bin/rake:23
  [1m[35m (0.6ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/bin/rake:23
Started POST "/graphql" for 192.168.144.1 at 2020-06-01 20:59:56 +0900
  [1m[35m (0.8ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 420ms (Views: 0.8ms | ActiveRecord: 33.8ms)


Started POST "/graphql" for 192.168.144.1 at 2020-06-01 21:01:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.3ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 107ms (Views: 0.3ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 192.168.144.1 at 2020-06-01 21:01:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 3,\n      isDryrun: true\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.9ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 3 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 96ms (Views: 0.2ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 21:58:19 +0900
  [1m[35m (0.7ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
  [1m[35m (17.3ms)[0m  [1m[34mSELECT `schema_migrations`.`version` FROM `schema_migrations` ORDER BY `schema_migrations`.`version` ASC[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 377ms (Views: 19.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 21:58:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createRssCrawlRequest(\n    input: {\n      jobType: \"rss\",\n      rssUrls: [\"https://news.walkerplus.com/rss/sttv7.xml\"],\n      tagName: \"item\",\n      linkNodeName: \"link\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createRssCrawlRequest(\n    input: {\n      jobType: \"rss\",\n      rssUrls: [\"https://news.walkerplus.com/rss/sttv7.xml\"],\n      tagName: \"item\",\n      linkNodeName: \"link\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_rss_crawl_request.rb:17
  [1m[36mCrawlRequest Create (1.2ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('rss', '{\"rss_urls\":[\"https://news.walkerplus.com/rss/sttv7.xml\"],\"tag_name\":\"item\",\"link_node_name\":\"link\",\"url_replace_pattern\":null,\"replace_new_string\":null}', 'now', '2020-06-01 12:58:28', '2020-06-01 12:58:28')[0m
  â†³ app/graphql/mutations/create_rss_crawl_request.rb:17
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_rss_crawl_request.rb:17
Completed 200 OK in 151ms (Views: 0.2ms | ActiveRecord: 49.4ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 21:58:57 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 178ms (Views: 13.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 21:59:05 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 25,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 25,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 25 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 142ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:01:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 25,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 25,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.4ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 25 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 76ms (Views: 0.4ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:02:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 156ms (Views: 37.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:04:31 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createRssCrawlRequest(\n    input: {\n      jobType: \"rss\",\n      rssUrls: [\"https://news.walkerplus.com/rss/sttv7.xml\"],\n      tagName: \"item\",\n      urlReplacePattern: \"$\",\n      replaceNewString: \"test\",\n      linkNodeName: \"link\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createRssCrawlRequest(\n    input: {\n      jobType: \"rss\",\n      rssUrls: [\"https://news.walkerplus.com/rss/sttv7.xml\"],\n      tagName: \"item\",\n      urlReplacePattern: \"$\",\n      replaceNewString: \"test\",\n      linkNodeName: \"link\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_rss_crawl_request.rb:17
  [1m[36mCrawlRequest Create (8.7ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('rss', '{\"rss_urls\":[\"https://news.walkerplus.com/rss/sttv7.xml\"],\"tag_name\":\"item\",\"link_node_name\":\"link\",\"url_replace_pattern\":\"$\",\"replace_new_string\":\"test\"}', 'now', '2020-06-01 13:04:32', '2020-06-01 13:04:32')[0m
  â†³ app/graphql/mutations/create_rss_crawl_request.rb:17
  [1m[35m (5.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_rss_crawl_request.rb:17
Completed 200 OK in 67ms (Views: 0.3ms | ActiveRecord: 14.9ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:04:36 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 193ms (Views: 14.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:04:41 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 26,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 26,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 26 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:06:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 26,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 26,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 26 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 74ms (Views: 0.3ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:21:01 +0900
  [1m[35m (3.2ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 408ms (Views: 24.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:21:33 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"crawl\",\n      startUrls: [\"https://corp.logly.co.jp/blog/articles\"],\n      indexPatterns: [\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\n      articlePatterns: [\"https://corp.logly.co.jp/blog/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"logly\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"crawl\",\n      startUrls: [\"https://corp.logly.co.jp/blog/articles\"],\n      indexPatterns: [\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\n      articlePatterns: [\"https://corp.logly.co.jp/blog/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"logly\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
  [1m[36mCrawlRequest Create (1.2ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('crawl', '{\"start_urls\":[\"https://corp.logly.co.jp/blog/articles\"],\"index_patterns\":[\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\"article_patterns\":[\"https://corp.logly.co.jp/blog/\\\\d+\"],\"except_article_patterns\":[],\"should_follow\":null,\"url_replace_pattern\":\"$\",\"replace_new_string\":\"logly\"}', 'now', '2020-06-01 13:21:34', '2020-06-01 13:21:34')[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
  [1m[35m (8.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
Completed 200 OK in 280ms (Views: 0.4ms | ActiveRecord: 70.1ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:21:36 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 155ms (Views: 14.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:21:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 27,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 27,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.9ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 27 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:22:55 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 27,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 27,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.7ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 27 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 34ms (Views: 0.7ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:23:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 27,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 27,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.7ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 27 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 40ms (Views: 1.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:25:26 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 200ms (Views: 40.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:25:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 185ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:25:29 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 172ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:25:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 356ms (Views: 30.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:25:32 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 160ms (Views: 24.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:26:18 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 180ms (Views: 17.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:29:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"regular\",\n      startUrls: [\"https://corp.logly.co.jp/blog/articles\"],\n      indexPatterns: [\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\n      articlePatterns: [\"https://corp.logly.co.jp/blog/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"logly\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"regular\",\n      startUrls: [\"https://corp.logly.co.jp/blog/articles\"],\n      indexPatterns: [\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\n      articlePatterns: [\"https://corp.logly.co.jp/blog/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"logly\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (2.0ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
  [1m[36mCrawlRequest Create (17.7ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('regular', '{\"start_urls\":[\"https://corp.logly.co.jp/blog/articles\"],\"index_patterns\":[\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\"article_patterns\":[\"https://corp.logly.co.jp/blog/\\\\d+\"],\"except_article_patterns\":[],\"should_follow\":null,\"url_replace_pattern\":\"$\",\"replace_new_string\":\"logly\"}', 'now', '2020-06-01 13:29:08', '2020-06-01 13:29:08')[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
  [1m[35m (34.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
Completed 200 OK in 114ms (Views: 0.3ms | ActiveRecord: 54.1ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:29:18 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 199ms (Views: 18.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:29:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.2ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 28 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 83ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:41:56 +0900
  [1m[35m (0.8ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.3ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 28 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 65ms (Views: 0.3ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 22:50:16 +0900
  [1m[35m (1.0ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 28 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 95ms (Views: 0.4ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:12:58 +0900
  [1m[35m (1.4ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 28 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 75ms (Views: 0.3ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:15:45 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.1ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 28 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 75ms (Views: 1.0ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:17:21 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 28,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.5ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 28 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 77ms (Views: 0.4ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:25:51 +0900
  [1m[35m (1.1ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 402ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:26:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createSitemapCrawlRequest(\n    input: {\n      jobType: \"sitemap\",\n      sitemapUrl: \"https://liginc.co.jp/sitemap.xml\",\n      sitemapPatterns: [\"sitemap-pt-post-2020-01\"],\n      exceptArticlePatterns: [\"https://liginc.co.jp/500530\"],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"hoge\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createSitemapCrawlRequest(\n    input: {\n      jobType: \"sitemap\",\n      sitemapUrl: \"https://liginc.co.jp/sitemap.xml\",\n      sitemapPatterns: [\"sitemap-pt-post-2020-01\"],\n      exceptArticlePatterns: [\"https://liginc.co.jp/500530\"],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"hoge\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_sitemap_crawl_request.rb:17
  [1m[36mCrawlRequest Create (13.9ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('sitemap', '{\"sitemap_url\":\"https://liginc.co.jp/sitemap.xml\",\"sitemap_patterns\":[\"sitemap-pt-post-2020-01\"],\"except_article_patterns\":[\"https://liginc.co.jp/500530\"],\"url_replace_pattern\":\"$\",\"replace_new_string\":\"hoge\"}', 'now', '2020-06-01 14:26:25', '2020-06-01 14:26:25')[0m
  â†³ app/graphql/mutations/create_sitemap_crawl_request.rb:17
  [1m[35m (13.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_sitemap_crawl_request.rb:17
Completed 200 OK in 277ms (Views: 0.3ms | ActiveRecord: 75.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:26:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 236ms (Views: 25.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:26:33 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 140ms (Views: 27.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:26:36 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 147ms (Views: 23.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-01 23:27:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 29,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 29,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 29 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 137ms (Views: 0.5ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 08:57:44 +0900
  [1m[35m (1.1ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 15,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 15,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 15 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
  [1m[35m (4.5ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/schedule_job.rb:37
  [1m[36mCrawlRequest Update (2.0ms)[0m  [1m[33mUPDATE `crawl_requests` SET `job_id` = '7f144f56-d593-48cb-a2d2-e2b18711ca5a', `updated_at` = '2020-06-01 23:57:45' WHERE `crawl_requests`.`id` = 15[0m
  â†³ app/graphql/mutations/schedule_job.rb:37
  [1m[35m (9.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/schedule_job.rb:37
Completed 200 OK in 454ms (Views: 0.2ms | ActiveRecord: 64.3ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 21:18:54 +0900
  [1m[35m (2.5ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 216ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 21:19:14 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"regular\",\n      startUrls: [\"https://corp.logly.co.jp/blog/articles\"],\n      indexPatterns: [\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\n      articlePatterns: [\"https://corp.logly.co.jp/blog/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"\",\n      replaceNewString: \"\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"regular\",\n      startUrls: [\"https://corp.logly.co.jp/blog/articles\"],\n      indexPatterns: [\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\n      articlePatterns: [\"https://corp.logly.co.jp/blog/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"\",\n      replaceNewString: \"\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
  [1m[36mCrawlRequest Create (1.8ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('regular', '{\"start_urls\":[\"https://corp.logly.co.jp/blog/articles\"],\"index_patterns\":[\"https://corp.logly.co.jp/blog/articles/page/[2|3]\"],\"article_patterns\":[\"https://corp.logly.co.jp/blog/\\\\d+\"],\"except_article_patterns\":[],\"should_follow\":null,\"url_replace_pattern\":\"\",\"replace_new_string\":\"\"}', 'now', '2020-06-02 12:19:14', '2020-06-02 12:19:14')[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
  [1m[35m (27.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:19
Completed 200 OK in 91ms (Views: 0.4ms | ActiveRecord: 29.5ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 21:21:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 213ms (Views: 18.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 21:21:13 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.4ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 144ms (Views: 0.7ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 21:25:34 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.5ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 106ms (Views: 0.4ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 21:42:36 +0900
  [1m[35m (2.6ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (6.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 131ms (Views: 0.3ms | ActiveRecord: 6.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:00:06 +0900
  [1m[35m (0.9ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.9ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 107ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:03:39 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 101ms (Views: 0.6ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:04:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.3ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 108ms (Views: 0.4ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:07:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (0.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 124ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:08:17 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 82ms (Views: 0.5ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:24:33 +0900
  [1m[35m (1.5ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 615ms (Views: 32.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:24:35 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 232ms (Views: 19.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:24:35 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 224ms (Views: 35.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-02 22:24:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createSitemapCrawlRequest(\n    input: {\n      jobType: \"sitemap\",\n      sitemapUrl: \"https://liginc.co.jp/sitemap.xml\",\n      sitemapPatterns: [\"sitemap-pt-post-2020-01\"],\n      exceptArticlePatterns: [\"https://liginc.co.jp/500530\"],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"hoge\",\n      scheduleType: \"now\",\n      userAgent: \"test-user-agent\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createSitemapCrawlRequest(\n    input: {\n      jobType: \"sitemap\",\n      sitemapUrl: \"https://liginc.co.jp/sitemap.xml\",\n      sitemapPatterns: [\"sitemap-pt-post-2020-01\"],\n      exceptArticlePatterns: [\"https://liginc.co.jp/500530\"],\n      urlReplacePattern: \"$\",\n      replaceNewString: \"hoge\",\n      scheduleType: \"now\",\n      userAgent: \"test-user-agent\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_sitemap_crawl_request.rb:18
  [1m[36mCrawlRequest Create (1.3ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('sitemap', '{\"sitemap_url\":\"https://liginc.co.jp/sitemap.xml\",\"sitemap_patterns\":[\"sitemap-pt-post-2020-01\"],\"except_article_patterns\":[\"https://liginc.co.jp/500530\"],\"url_replace_pattern\":\"$\",\"replace_new_string\":\"hoge\",\"user_agent\":\"test-user-agent\"}', 'now', '2020-06-02 13:24:55', '2020-06-02 13:24:55')[0m
  â†³ app/graphql/mutations/create_sitemap_crawl_request.rb:18
  [1m[35m (63.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_sitemap_crawl_request.rb:18
Completed 200 OK in 255ms (Views: 1.7ms | ActiveRecord: 118.2ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 21:41:57 +0900
  [1m[35m (8.2ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 676ms (Views: 44.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 21:43:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"regular\",\n      startUrls: [\"https://premium.toyokeizai.net/list/latest\"],\n      indexPatterns: [],\n      articlePatterns: [\"https://premium.toyokeizai.net/articles/-/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"\",\n      replaceNewString: \"\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}", "graphql"=>{"query"=>"mutation {\n  createRegularCrawlRequest(\n    input: {\n      jobType: \"regular\",\n      startUrls: [\"https://premium.toyokeizai.net/list/latest\"],\n      indexPatterns: [],\n      articlePatterns: [\"https://premium.toyokeizai.net/articles/-/\\\\d+\"],\n      exceptArticlePatterns:[],\n      urlReplacePattern: \"\",\n      replaceNewString: \"\",\n      scheduleType: \"now\",\n    }) {\n    crawlRequest {\n      id\n      rules\n    }\n    result\n  }\n}"}}
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:20
  [1m[36mCrawlRequest Create (6.1ms)[0m  [1m[32mINSERT INTO `crawl_requests` (`job_type`, `rules`, `schedule_type`, `created_at`, `updated_at`) VALUES ('regular', '{\"start_urls\":[\"https://premium.toyokeizai.net/list/latest\"],\"index_patterns\":[],\"article_patterns\":[\"https://premium.toyokeizai.net/articles/-/\\\\d+\"],\"except_article_patterns\":[],\"should_follow\":null,\"url_replace_pattern\":\"\",\"replace_new_string\":\"\",\"user_agent\":null}', 'now', '2020-06-03 12:43:00', '2020-06-03 12:43:00')[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:20
  [1m[35m (39.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/mutations/create_regular_crawl_request.rb:20
Completed 200 OK in 364ms (Views: 0.4ms | ActiveRecord: 158.1ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 21:43:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 263ms (Views: 29.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 21:43:31 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (6.8ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 142ms (Views: 0.5ms | ActiveRecord: 6.8ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 22:38:09 +0900
  [1m[35m (1.8ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.5ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 123ms (Views: 0.5ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 22:41:47 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.0ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 92ms (Views: 0.2ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 22:49:50 +0900
  [1m[35m (9.8ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 180ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-03 22:50:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.5ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 96ms (Views: 0.4ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-04 09:29:28 +0900
  [1m[35m (1.7ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.9ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 132ms (Views: 0.5ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-04 21:10:53 +0900
  [1m[35m (7.6ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (7.2ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 172ms (Views: 3.2ms | ActiveRecord: 7.2ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-04 21:11:47 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (1.4ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 110ms (Views: 4.0ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-04 21:18:03 +0900
  [1m[35m (3.0ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 32,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (2.7ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 32 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 131ms (Views: 2.1ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 192.168.160.1 at 2020-06-04 21:47:11 +0900
  [1m[35m (2.0ms)[0m  [1m[35mSET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483[0m
  â†³ /usr/local/bundle/gems/activerecord-5.2.4.3/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}", "graphql"=>{"query"=>"mutation {\n  scheduleJob(\n    input: {\n      requestId: 30,\n      isDryrun: false\n    }) {\n    result\n    isDryrun\n  }\n}"}}
  [1m[36mCrawlRequest Load (3.2ms)[0m  [1m[34mSELECT  `crawl_requests`.* FROM `crawl_requests` WHERE `crawl_requests`.`id` = 30 LIMIT 1[0m
  â†³ app/graphql/mutations/schedule_job.rb:13
Completed 200 OK in 178ms (Views: 0.3ms | ActiveRecord: 3.2ms)


